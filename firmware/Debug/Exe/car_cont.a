;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.10 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 28.04.2017
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;#define speed_led0 PORTD.0
;#define speed_led1 PORTD.1
;#define speed_led2 PORTD.2
;#define speed_led3 PORTD.3
;#define speed_led4 PORTD.4
;#define speed_led5 PORTD.5
;#define speed_led6 PORTD.6
;
;#define bat_led1 PORTB.3
;#define bat_led2 PORTB.4
;#define bat_led3 PORTB.5
;
;#define red_led PORTB.6
;#define blue_led PORTB.7
;
;#define rotate_led PORTB.0
;
;#define light PORTC.5
;
;#define brake PORTD.7
;#define audio PORTB.2
;
;#define back_run PINC.0
;#define run_sens PINC.1
;#define beep PINC.3
;#define zummer PINC.4
;
;#define gaz 6
;#define batt 7
;#define max_speed 2
;
;#define rotate_period 80
;#define blink_period 8
;
;#define full_batt 14
;#define half_batt 12
;#define low_batt 11
;#define empy_bat 10
;
;#define brake_len 200;
;
;#define out_power OCR1AL
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdlib.h>
;
;
;void proces_rotate(void);
;void proces_blink(void);
;unsigned int read_adc(unsigned char adc_input);
;void proces_run(void);
;void proces_siren(void);
;void proces_button(void);
;void set_tone(int freq);
;void set_speed_led(char speed);
;void check_battery(void);
;void all_off(void);
;long map(long x, long in_min, long in_max, long out_min, long out_max);// перевід одиниць
;void proces_control_power(void);
;
;char run_mode=0; // 0-stop, 1-run,2-back_run, 3-emergency
;char audio_mode=0; // 0-stop, 1-beep, 2-back_run, 3-siren, 4-alarm
;
;char rotate_tmr=0;
;char blink_tmr=0,blink_reg=0;
;long period=0;
;
;char curent_speed=0,old_speed=0;
;int run_wathdog=0;
;int brake_tmr=0;
;
;bit old_zummer=1,old_run_sens=1;
;bit state_zummer=0,state_beep=0,state_back_run=0;
;
;bit blink_bat=0,battery_empy=0;
;char bat_period=0;
;
;
;const int pitchLow = 300;
;const int pitchHigh = 1000;
;int pitchStep = 35;

	.DSEG
;int currentPitch=300;
;
;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 006F {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0070     check_battery();
;PCODE: $0000000F VOL: 0
; 0000 0071     if (battery_empy==0)
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0072     {
; 0000 0073         proces_rotate();
;PCODE: $00000013 VOL: 0
; 0000 0074         proces_blink();
;PCODE: $00000014 VOL: 0
; 0000 0075         proces_button();
;PCODE: $00000015 VOL: 0
; 0000 0076         proces_run();
;PCODE: $00000016 VOL: 0
; 0000 0077         proces_control_power();
;PCODE: $00000017 VOL: 0
; 0000 0078         if(state_zummer==1) proces_siren();
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0079         if(state_beep==1)set_tone(400);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 007A         if(state_beep==0 && state_zummer==0) period=0;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 007B 
; 0000 007C     }
;PCODE: $0000002F VOL: 0
; 0000 007D 
; 0000 007E 
; 0000 007F }
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;// Timer2 overflow interrupt service routine
;void check_battery(void)// перевірка заряду батереї
; 0000 0082 {
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0083     double cur_bat=1023;
; 0000 0084     bat_period++;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;	cur_bat -> Y+0
;PCODE: $0000003F VOL: 0
; 0000 0085     if (bat_period<100)  return; else bat_period=0;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0086     cur_bat=read_adc(batt);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0087     cur_bat=cur_bat/68;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0088     if (cur_bat>full_batt) bat_led1=1; else bat_led1=0;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0089     if (cur_bat>half_batt) bat_led2=1; else bat_led2=0;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 008A     if (cur_bat>low_batt) bat_led3=1; else bat_led3=0;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 008B     if (cur_bat<empy_bat)
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 008C     {
; 0000 008D         all_off();
;PCODE: $00000075 VOL: 0
; 0000 008E         battery_empy=1;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 008F        blink_bat=!blink_bat;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0090        bat_led1=blink_bat;bat_led2=blink_bat;bat_led3=blink_bat;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0091     }
; 0000 0092     else
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0093     {
; 0000 0094         battery_empy=0;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0095         light=1;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0096     }
;PCODE: $000000A1 VOL: 0
; 0000 0097 }
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;void all_off(void)// Вимкнення всіх пристроїв
; 0000 0099 {
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 009A speed_led0=0;speed_led1=0;speed_led2=0;speed_led3=0;speed_led4=0;speed_led5=0;speed_led6=0;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 009B red_led=0;blue_led=0;rotate_led=0;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 009C light=0;brake=0;audio=0;period=0;out_power=0;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 009D }
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;void proces_run(void)
; 0000 009F {
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00A0 
; 0000 00A1     char max_spd =map(read_adc(max_speed),0,1023,0,255);
; 0000 00A2     curent_speed=map(read_adc(gaz),0,1023,0,255);
;PCODE: $000000C9 VOL: 0
;	max_spd -> R17
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 00A3     if (curent_speed<20)
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00A4     {
; 0000 00A5         curent_speed=0;
;PCODE: $000000E7 VOL: 0
; 0000 00A6         run_mode=0;
;PCODE: $000000E8 VOL: 0
; 0000 00A7         if (brake_tmr>0) brake_tmr--; else brake=0;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00A8     }
;PCODE: $000000F4 VOL: 0
; 0000 00A9     else
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00AA     {
; 0000 00AB         brake=0;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00AC     }
;PCODE: $000000F9 VOL: 0
; 0000 00AD     if (run_mode==3) {return; curent_speed=0;}
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 00AE     if (back_run==1) {run_mode=2;max_spd=max_spd/2;} else {run_mode=1;}
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00AF     set_speed_led(curent_speed);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00B0     curent_speed=map(curent_speed,0,255,0,max_spd);
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00B1 }
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;void proces_control_power(void)
; 0000 00B3 {
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00B4     if (run_mode==1 || run_mode==2)
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00B5     {
; 0000 00B6       if (out_power<curent_speed) out_power++;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00B7       if (out_power>curent_speed) out_power--;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00B8       if (curent_speed<20) out_power=0;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00B9     }
;PCODE: $00000144 VOL: 0
; 0000 00BA     else
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00BB     {
; 0000 00BC         out_power=0;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00BD         curent_speed=0;
;PCODE: $00000149 VOL: 0
; 0000 00BE     }
;PCODE: $0000014A VOL: 0
; 0000 00BF     if (old_speed>0 && curent_speed==0) {brake=1;brake_tmr=brake_len;}
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00C0     old_speed=curent_speed;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00C1 }
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;// Voltage Reference: AREF pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 00C7 {
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00C8 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $00000160 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00C9 // Delay needed for the stabilization of the ADC input voltage
; 0000 00CA delay_us(10);
;PCODE: $00000164 VOL: 0
; 0000 00CB // Start the AD conversion
; 0000 00CC ADCSRA|=(1<<ADSC);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00CD // Wait for the AD conversion to complete
; 0000 00CE while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00CF ADCSRA|=(1<<ADIF);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00D0 return ADCW;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00D1 }
;PCODE: $00000172 VOL: 0
;
;void main(void)
; 0000 00D4 {
;PCODE: $00000173 VOL: 0
; 0000 00D5 // Declare your local variables here
; 0000 00D6 
; 0000 00D7 // Input/Output Ports initialization
; 0000 00D8 // Port B initialization
; 0000 00D9 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 00DA DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00DB // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 00DC PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00DD 
; 0000 00DE // Port C initialization
; 0000 00DF // Function: Bit6=Out Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00E0 DDRC=(1<<DDC6) | (1<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00E1 // State: Bit6=0 Bit5=0 Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00E2 PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00E3 
; 0000 00E4 // Port D initialization
; 0000 00E5 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 00E6 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00E7 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 00E8 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 00E9 
; 0000 00EA // Timer/Counter 0 initialization
; 0000 00EB // Clock source: System Clock
; 0000 00EC // Clock value: 31,250 kHz
; 0000 00ED TCCR0=(1<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00EE TCNT0=0x00;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00EF 
; 0000 00F0 
; 0000 00F1 // Timer/Counter 1 initialization
; 0000 00F2 // Clock source: System Clock
; 0000 00F3 // Clock value: 31,250 kHz
; 0000 00F4 // Mode: Ph. correct PWM top=0x00FF
; 0000 00F5 // OC1A output: Non-Inverted PWM
; 0000 00F6 // OC1B output: Disconnected
; 0000 00F7 // Noise Canceler: Off
; 0000 00F8 // Input Capture on Falling Edge
; 0000 00F9 // Timer Period: 16,32 ms
; 0000 00FA // Output Pulse(s):
; 0000 00FB // OC1A Period: 16,32 ms Width: 0 us
; 0000 00FC // Timer1 Overflow Interrupt: Off
; 0000 00FD // Input Capture Interrupt: Off
; 0000 00FE // Compare A Match Interrupt: Off
; 0000 00FF // Compare B Match Interrupt: Off
; 0000 0100 TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (1<<WGM10);
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 0101 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0102 TCNT1H=0x00;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 0103 TCNT1L=0x00;
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 0104 ICR1H=0x00;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 0105 ICR1L=0x00;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 0106 OCR1AH=0x00;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 0107 OCR1AL=0x00;
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 0108 OCR1BH=0x00;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 0109 OCR1BL=0x00;
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 010A 
; 0000 010B // Timer/Counter 2 initialization
; 0000 010C // Clock source: System Clock
; 0000 010D // Clock value: 125,000 kHz
; 0000 010E // Mode: Normal top=0xFF
; 0000 010F // OC2 output: Disconnected
; 0000 0110 // Timer Period: 1,248 ms
; 0000 0111 ASSR=0<<AS2;
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 0112 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (1<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 0113 TCNT2=0x00;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 0114 OCR2=0x00;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 0115 
; 0000 0116 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0117 TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<TOIE0);
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 0118 
; 0000 0119 // External Interrupt(s) initialization
; 0000 011A // INT0: Off
; 0000 011B // INT1: Off
; 0000 011C MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 011D 
; 0000 011E // USART initialization
; 0000 011F // USART disabled
; 0000 0120 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 0121 
; 0000 0122 // Analog Comparator initialization
; 0000 0123 // Analog Comparator: Off
; 0000 0124 // The Analog Comparator's positive input is
; 0000 0125 // connected to the AIN0 pin
; 0000 0126 // The Analog Comparator's negative input is
; 0000 0127 // connected to the AIN1 pin
; 0000 0128 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 0129 
; 0000 012A // ADC initialization
; 0000 012B // ADC Clock frequency: 62,500 kHz
; 0000 012C // ADC Voltage Reference: AREF pin
; 0000 012D ADMUX=ADC_VREF_TYPE;
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 012E ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 012F SFIOR=(0<<ACME);
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 0130 
; 0000 0131 // SPI initialization
; 0000 0132 // SPI disabled
; 0000 0133 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 0134 
; 0000 0135 // TWI initialization
; 0000 0136 // TWI disabled
; 0000 0137 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 0138 
; 0000 0139 // Global enable interrupts
; 0000 013A #asm("sei")
;PCODE: $000001B2 VOL: 0
	sei
;PCODE: $000001B3 VOL: 0
; 0000 013B 
; 0000 013C while (1)
;PCODE: $000001B4 VOL: 0
; 0000 013D       {
; 0000 013E 
; 0000 013F }
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 0140 }
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;void proces_button(void) //Обробка натиснення кнопок
; 0000 0142 {
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 0143     state_beep=!beep;
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 0144     state_back_run=!back_run;
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 0145     if(old_zummer!=zummer)
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 0146     {
; 0000 0147         state_zummer=!zummer;
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 0148         if(state_zummer==1)
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 0149         {
; 0000 014A             pitchStep=(rand() % 3)*10 + 5;
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 014B             currentPitch=pitchLow;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 014C         }
; 0000 014D     }
;PCODE: $000001DD VOL: 0
; 0000 014E     if(old_run_sens!=run_sens)
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 014F     {
; 0000 0150         if(run_sens==0) run_wathdog=0;
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 0151     }
;PCODE: $000001EB VOL: 0
; 0000 0152     old_zummer=zummer;
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 0153     old_run_sens=run_sens;
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 0154 }
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;
;void set_speed_led(char speed)// Вивід рівня швидкості на світлодіодне табло
; 0000 0157 {
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 0158     if (speed>40) speed_led0=1; else speed_led0=0;
;PCODE: $000001F9 VOL: 0
;	speed -> Y+0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0159     if (speed>70) speed_led1=1; else speed_led1=0;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 015A     if (speed>100) speed_led2=1; else speed_led2=0;
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 015B     if (speed>130) speed_led3=1; else speed_led3=0;
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 015C     if (speed>160) speed_led4=1; else speed_led4=0;
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 015D     if (speed>190) speed_led5=1; else speed_led5=0;
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 015E     if (speed>220) speed_led6=1; else speed_led6=0;
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 015F }
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;void proces_rotate(void)// Генерація сигналу на повороти
; 0000 0161 {
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 0162     rotate_tmr++;
;PCODE: $00000245 VOL: 0
; 0000 0163     if (rotate_tmr<rotate_period) return; else rotate_tmr=0;
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 0164     rotate_led=!rotate_led;
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 0165 }
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;void proces_blink(void)// Генерація сигналу на мигалки
; 0000 0167 {
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 0168     blink_tmr++;
;PCODE: $0000025B VOL: 0
; 0000 0169     if (blink_tmr<blink_period) return; else blink_tmr=0;
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 016A     blink_reg++;
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 016B      if (blink_reg>12) blink_reg=1;
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 016C     if (blink_reg>6)
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
; 0000 016D     {
; 0000 016E         red_led=0;
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 016F         blue_led=!blue_led;
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 0170     }
; 0000 0171     else
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 0172     {
; 0000 0173         blue_led=0;
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
; 0000 0174         red_led=!red_led;
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 0175     }
;PCODE: $00000287 VOL: 0
; 0000 0176 
; 0000 0177 }
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)// Таймер відтворення звуку
; 0000 017A {
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
; 0000 017B     TCNT2=period;
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 017C     if (period==0) {audio=0; return;}
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0000 017D    audio=!audio;
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 017E }
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;
;void set_tone(int freq)//Встановлення тону звучання
; 0000 0181 {
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 0182   period =256-(62500/freq) ;
;PCODE: $000002A5 VOL: 0
;	freq -> Y+0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 0183 }
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;void proces_siren(void)// Генерація сирени
; 0000 0185 {
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 0186   set_tone(currentPitch);
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 0187   currentPitch += pitchStep;
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 0188   if(currentPitch >= pitchHigh) {
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 0189     pitchStep = -pitchStep;
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 018A   }
; 0000 018B   else if(currentPitch <= pitchLow) {
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 018C      pitchStep = -pitchStep;
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 018D   }
; 0000 018E }
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;long map(long x, long in_min, long in_max, long out_min, long out_max)// перевід одиниць
; 0000 0190 {
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 0191   return ((x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min);
;PCODE: $000002CD VOL: 0
;	x -> Y+16
;	in_min -> Y+12
;	in_max -> Y+8
;	out_min -> Y+4
;	out_max -> Y+0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 0192 }
;PCODE: $000002E1 VOL: 0
